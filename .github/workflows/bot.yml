name: Java Telegram Bot CI/CD

on:
  push:
    branches: [master]

jobs:
  static-test:
    runs-on: ubuntu-latest
    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Run Checkstyle
      run: mvn checkstyle:checkstyle

  build:
    runs-on: ubuntu-latest
    outputs:
      artifact: ${{ steps.build_artifact.output.artifact-path }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean compile assembly:single

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: telegram-bot
        path: target/*.jar
      id: build_artifact

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: telegram-bot
        path: bot

    - name: Deploy to AWS EC2
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo "${{ secrets.SSH_KEY }}" >> ~/.ssh/telegram-bot.pem
        chmod 600 ~/.ssh/telegram-bot.pem
        ssh-keyscan -H ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts
        
        mv bot/*.jar bot/telegram-bot.jar

        scp -i ~/.ssh/telegram-bot.pem bot/telegram-bot.jar ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/bot/telegram-bot.jar
        ssh -i ~/.ssh/telegram-bot.pem ubuntu@${{ secrets.EC2_IP }} 'sudo systemctl restart telegram-bot.service'