name: Java Telegram Bot CI/CD

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact: ${{ steps.build_artifact.output.artifact-path }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean compile assembly:single

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: telegram-bot
        path: target/*.jar
      id: build_artifact

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: telegram-bot
        path: bot

    - name: Deploy to AWS EC2
      run: |
        mkdir -p .ssh
        
        echo "${{ secrets.SSH_KEY }}" > .ssh/id_ed25519
        chmod 600 .ssh/id_ed25519
        ssh-keyscan ${{ secrets.EC2_IP }} >> .ssh/known_hosts
        chmod 644 .ssh/known_hosts
        
        mv bot/*.jar bot/telegram-bot.jar

        scp -v bot/telegram-bot.jar ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/bot/telegram-bot.jar
        ssh -o StrictHostKeyChecking=no -i .ssh/id_ed25519 ubuntu@${{ secrets.EC2_IP }} 'echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" | sudo tee -a /etc/environment'
        ssh -o StrictHostKeyChecking=no -i .ssh/id_ed25519 ubuntu@${{ secrets.EC2_IP }} 'sudo systemctl restart telegram-bot.service'