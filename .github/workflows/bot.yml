name: Java Telegram Bot CI/CD

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact: ${{ steps.build_artifact.output.artifact-path }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
    
    # - name: Cache Maven packages
    #   uses: actions/checkout@v3
    #   with:
    #     path: ~/.m2
    #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    #     restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean compile assembly:single

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: telegram-bot
        path: target/*.jar
      id: build_artifact

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: telegram-bot
        path: bot

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ${{ secrets.AWS_REGION }}

    # - name: Set up SSH key
    #   run: |
    #     mkdir -p .ssh
    #     echo "${{ secrets.SSH_KEY }}" > .ssh/telegram-bot.pem
    #     chmod 600 .ssh/telegram-bot.pem
    #     SSH_KEYSCAN=$(ssh-keyscan -H ${{ secrets.EC2_IP }})
    #     if ! grep -q "$SSH_KEYSCAN" .ssh/known_hosts; then
    #       echo "$SSH_KEYSCAN" >> .ssh/known_hosts
    #     fi

    - name: Deploy to AWS EC2
      run: |
        mkdir -p .ssh
        echo "${{ secrets.SSH_KEY }}" > .ssh/telegram-bot.pem
        chmod 600 .ssh/telegram-bot.pem
        SSH_KEYSCAN=$(ssh-keyscan -H "${{ secrets.EC2_IP }}")
        
        echo "$SSH_KEYSCAN"
        
        if ! grep -q "$SSH_KEYSCAN" .ssh/known_hosts; then
          echo "$SSH_KEYSCAN" >> .ssh/known_hosts
        fi
        
        ls .ssh
        cat .ssh/telegram-bot.pem

        
        scp -i .ssh/telegram-bot.pem bot/telegram-bot.jar ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/bot/telegram-bot.jar
        ssh -i .ssh/telegram-bot.pem ubuntu@${{ secrets.EC2_IP }} 'sudo systemctl restart telegram-bot.service'